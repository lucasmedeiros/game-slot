{"ast":null,"code":"import config from '../config';\nimport { getFromLocalStorage } from '../utils';\n\nconst generateHeader = () => {\n  const user = getFromLocalStorage('user');\n  return {\n    Authorization: user ? `Bearer ${user.token}` : undefined,\n    'Content-Type': 'application/json'\n  };\n};\n\nconst request = async (url, method, body, headers) => {\n  if (method !== 'GET' && method !== 'DELETE' && !body) return {\n    status: 400,\n    success: false,\n    message: 'No body provided',\n    data: null\n  };\n  const response = await fetch(url, {\n    method,\n    body: body ? JSON.stringify(body) : null,\n    headers\n  });\n  const data = await response.json();\n  if (response.status >= 400) return {\n    status: response.status,\n    success: false,\n    message: data.error,\n    data: null\n  };\n  return {\n    status: response.status,\n    success: true,\n    message: 'OK',\n    data\n  };\n};\n\nexport const callAPI = async (path, method, body) => {\n  return await request(`${config.apiURL}/${path}`, method, body, generateHeader());\n};","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/services/request.service.ts"],"names":["config","getFromLocalStorage","generateHeader","user","Authorization","token","undefined","request","url","method","body","headers","status","success","message","data","response","fetch","JSON","stringify","json","error","callAPI","path","apiURL"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,mBAAT,QAAoC,UAApC;;AAWA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,IAAI,GAAGF,mBAAmB,CAAC,MAAD,CAAhC;AACA,SAAO;AACLG,IAAAA,aAAa,EAAED,IAAI,GAAI,UAASA,IAAI,CAACE,KAAM,EAAxB,GAA4BC,SAD1C;AAEL,oBAAgB;AAFX,GAAP;AAID,CAND;;AAQA,MAAMC,OAAO,GAAG,OACdC,GADc,EAEdC,MAFc,EAGdC,IAHc,EAIdC,OAJc,KAKe;AAC7B,MAAIF,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,QAA/B,IAA2C,CAACC,IAAhD,EACE,OAAO;AACLE,IAAAA,MAAM,EAAE,GADH;AAELC,IAAAA,OAAO,EAAE,KAFJ;AAGLC,IAAAA,OAAO,EAAE,kBAHJ;AAILC,IAAAA,IAAI,EAAE;AAJD,GAAP;AAOF,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAChCC,IAAAA,MADgC;AAEhCC,IAAAA,IAAI,EAAEA,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAH,GAA0B,IAFJ;AAGhCC,IAAAA;AAHgC,GAAN,CAA5B;AAMA,QAAMI,IAAI,GAAG,MAAMC,QAAQ,CAACI,IAAT,EAAnB;AAEA,MAAIJ,QAAQ,CAACJ,MAAT,IAAmB,GAAvB,EACE,OAAO;AACLA,IAAAA,MAAM,EAAEI,QAAQ,CAACJ,MADZ;AAELC,IAAAA,OAAO,EAAE,KAFJ;AAGLC,IAAAA,OAAO,EAAEC,IAAI,CAACM,KAHT;AAILN,IAAAA,IAAI,EAAE;AAJD,GAAP;AAOF,SAAO;AACLH,IAAAA,MAAM,EAAEI,QAAQ,CAACJ,MADZ;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,OAAO,EAAE,IAHJ;AAILC,IAAAA;AAJK,GAAP;AAMD,CApCD;;AAsCA,OAAO,MAAMO,OAAO,GAAG,OACrBC,IADqB,EAErBd,MAFqB,EAGrBC,IAHqB,KAIQ;AAC7B,SAAO,MAAMH,OAAO,CACjB,GAAEP,MAAM,CAACwB,MAAO,IAAGD,IAAK,EADP,EAElBd,MAFkB,EAGlBC,IAHkB,EAIlBR,cAAc,EAJI,CAApB;AAMD,CAXM","sourcesContent":["import config from '../config'\nimport { getFromLocalStorage } from '../utils'\n\ntype Method = 'GET' | 'POST' | 'DELETE' | 'PUT'\n\nexport interface RequestResponse {\n  status: number\n  success: boolean\n  message: string\n  data: any\n}\n\nconst generateHeader = () => {\n  const user = getFromLocalStorage('user') as User | undefined\n  return {\n    Authorization: user ? `Bearer ${user.token}` : undefined,\n    'Content-Type': 'application/json',\n  }\n}\n\nconst request = async (\n  url: string,\n  method: Method,\n  body: any,\n  headers: any\n): Promise<RequestResponse> => {\n  if (method !== 'GET' && method !== 'DELETE' && !body)\n    return {\n      status: 400,\n      success: false,\n      message: 'No body provided',\n      data: null,\n    }\n\n  const response = await fetch(url, {\n    method,\n    body: body ? JSON.stringify(body) : null,\n    headers,\n  })\n\n  const data = await response.json()\n\n  if (response.status >= 400)\n    return {\n      status: response.status,\n      success: false,\n      message: data.error,\n      data: null,\n    }\n\n  return {\n    status: response.status,\n    success: true,\n    message: 'OK',\n    data,\n  }\n}\n\nexport const callAPI = async (\n  path: string,\n  method: Method,\n  body: any\n): Promise<RequestResponse> => {\n  return await request(\n    `${config.apiURL}/${path}`,\n    method,\n    body,\n    generateHeader()\n  )\n}\n"]},"metadata":{},"sourceType":"module"}