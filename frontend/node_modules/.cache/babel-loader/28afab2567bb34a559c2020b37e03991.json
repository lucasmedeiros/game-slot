{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Git/game-slot/src/pages/Lists/ViewList/index.tsx\";\n\n/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport GamesGrid from '../../../components/GamesGrid';\nimport { deleteGameList as deleteGameListAction, deleteGameListItem } from '../../../store/lists/actions';\nimport { deleteGameList, removeGameFromList, getOneGameList } from '../../../services/gameLists.service';\n\nconst ViewList = () => {\n  const [blocked, setBlocked] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {\n    id\n  } = useParams();\n  const [list, setList] = useState();\n  const user = useSelector(state => state.userReducer.user);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getOneGameList(id).then(listResponse => {\n      setList(listResponse);\n      setLoading(false);\n    });\n  }, [id]);\n\n  const onAddGames = () => {\n    history.push('/search');\n  };\n\n  const onDeleteList = async () => {\n    const mayDelete = confirm('Are you sure you want to delete this list?');\n\n    if (mayDelete) {\n      setBlocked(true);\n      const success = await deleteGameList(id);\n\n      if (success) {\n        dispatch(deleteGameListAction(id));\n        setList(null);\n      }\n    }\n  };\n\n  const onDeleteGameFromList = async gameId => {\n    const mayDelete = confirm('Are you sure you want to remove this game from this list?');\n\n    if (mayDelete) {\n      setBlocked(true);\n      const newList = await removeGameFromList(id, gameId);\n      setList(newList);\n      dispatch(deleteGameListItem(id, gameId));\n      setBlocked(false);\n    }\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  });\n  if (!list) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"px-2 md:px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"tracking-widest text-white font-bold text-2xl uppercase py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, list.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames('flex flex-col w-full xl:flex-row flex-wrap mt-2', {\n      hidden: list.user !== (user === null || user === void 0 ? void 0 : user.user._id)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: blocked,\n    type: \"button\",\n    onClick: onAddGames,\n    className: classnames('bg-blue-600 text-white p-5 w-full text-center block md:inline xl:w-1/6 uppercase font-bold text-lg', {\n      'cursor-not-allowed opacity-50': blocked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: blocked,\n    type: \"button\",\n    onClick: onDeleteList,\n    className: classnames('bg-red-600 mt-3 xl:mt-0 xl:ml-3 text-white p-5 w-full text-center block md:inline xl:w-1/6 uppercase font-bold text-lg', {\n      'cursor-not-allowed opacity-50': blocked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"delete\")), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-white mt-10 uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"games on this list\"), /*#__PURE__*/React.createElement(GamesGrid, {\n    onClick: onDeleteGameFromList,\n    games: list.games,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ViewList;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/pages/Lists/ViewList/index.tsx"],"names":["React","useState","useEffect","useParams","Redirect","useHistory","useSelector","useDispatch","classnames","GamesGrid","deleteGameList","deleteGameListAction","deleteGameListItem","removeGameFromList","getOneGameList","ViewList","blocked","setBlocked","loading","setLoading","id","list","setList","user","state","userReducer","history","dispatch","then","listResponse","onAddGames","push","onDeleteList","mayDelete","confirm","success","onDeleteGameFromList","gameId","newList","name","hidden","_id","games"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from 'react'\nimport { useParams, Redirect, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport { RootState } from '../../../store'\nimport GamesGrid from '../../../components/GamesGrid'\nimport {\n  deleteGameList as deleteGameListAction,\n  deleteGameListItem,\n} from '../../../store/lists/actions'\nimport {\n  deleteGameList,\n  removeGameFromList,\n  getOneGameList,\n} from '../../../services/gameLists.service'\n\ninterface Params {\n  id: string\n}\n\nconst ViewList: React.FC = () => {\n  const [blocked, setBlocked] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(true)\n  const { id } = useParams<Params>()\n  const [list, setList] = useState<GameList | null>()\n  const user = useSelector((state: RootState) => state.userReducer.user)\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    getOneGameList(id).then((listResponse) => {\n      setList(listResponse)\n      setLoading(false)\n    })\n  }, [id])\n\n  const onAddGames = () => {\n    history.push('/search')\n  }\n\n  const onDeleteList = async () => {\n    const mayDelete = confirm('Are you sure you want to delete this list?')\n    if (mayDelete) {\n      setBlocked(true)\n      const success = await deleteGameList(id)\n      if (success) {\n        dispatch(deleteGameListAction(id))\n        setList(null)\n      }\n    }\n  }\n\n  const onDeleteGameFromList = async (gameId: string) => {\n    const mayDelete = confirm(\n      'Are you sure you want to remove this game from this list?'\n    )\n\n    if (mayDelete) {\n      setBlocked(true)\n      const newList = await removeGameFromList(id, gameId)\n      setList(newList)\n      dispatch(deleteGameListItem(id, gameId))\n      setBlocked(false)\n    }\n  }\n\n  if (loading) return <div />\n\n  if (!list) return <Redirect to=\"/\" />\n\n  return (\n    <section className=\"px-2 md:px-5\">\n      <h1 className=\"tracking-widest text-white font-bold text-2xl uppercase py-3\">\n        {list.name}\n      </h1>\n      <div\n        className={classnames(\n          'flex flex-col w-full xl:flex-row flex-wrap mt-2',\n          {\n            hidden: list.user !== user?.user._id,\n          }\n        )}\n      >\n        <button\n          disabled={blocked}\n          type=\"button\"\n          onClick={onAddGames}\n          className={classnames(\n            'bg-blue-600 text-white p-5 w-full text-center block md:inline xl:w-1/6 uppercase font-bold text-lg',\n            {\n              'cursor-not-allowed opacity-50': blocked,\n            }\n          )}\n        >\n          edit\n        </button>\n        <button\n          disabled={blocked}\n          type=\"button\"\n          onClick={onDeleteList}\n          className={classnames(\n            'bg-red-600 mt-3 xl:mt-0 xl:ml-3 text-white p-5 w-full text-center block md:inline xl:w-1/6 uppercase font-bold text-lg',\n            {\n              'cursor-not-allowed opacity-50': blocked,\n            }\n          )}\n        >\n          delete\n        </button>\n      </div>\n      <h1 className=\"text-white mt-10 uppercase\">games on this list</h1>\n      <GamesGrid onClick={onDeleteGameFromList} games={list.games} />\n    </section>\n  )\n}\n\nexport default ViewList\n"]},"metadata":{},"sourceType":"module"}