{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Git/game-slot/src/pages/Auth/SignUp/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { signup } from '../../../services/auth.service';\n\nconst Login = () => {\n  const user = useSelector(state => state.userReducer.user);\n  const [submissionError, setSubmissionError] = useState();\n  const [signingUp, setSigningUp] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [passError, setPassError] = useState('');\n  const [confirmPassError, setConfirmPassError] = useState('');\n  useEffect(() => {\n    if (name) setNameError('');\n    if (username) setUsernameError('');\n    if (password) setPassError('');\n    if (confirmPassword) setConfirmPassError('');\n  }, [username, password, confirmPassword, name]);\n\n  const validateInputs = () => {\n    if (!name.trim()) setNameError(`'Name' is required`);\n    if (!username.trim()) setUsernameError(`'Username' is required`);\n    if (!password.trim()) setPassError(`'Password' is required`);\n    if (!confirmPassword.trim()) setConfirmPassError(`'Confirm password' is required`);\n  };\n\n  const clear = () => {\n    setName('');\n    setUsername('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const onLogin = async e => {\n    e.preventDefault();\n\n    if (!signingUp) {\n      validateInputs();\n\n      if (username && password) {\n        setSigningUp(true);\n        const response = await signup({\n          name,\n          email: username,\n          password,\n          confirmPassword\n        });\n        if (!response.success) setSubmissionError(response.message);else clear();\n        setSuccess(response.success);\n        setSigningUp(false);\n      }\n    }\n  };\n\n  return !user ? /*#__PURE__*/React.createElement(\"section\", {\n    className: \"w-full h-full flex items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bg-dark-700 w-full mt-5 mx-3 md:mx-0 md:w-1/2 px-3 py-2 md:px-8 md:py-6 rounded-lg\",\n    onSubmit: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-200 text-sm font-bold mb-2 uppercase\",\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classnames('shadow appearance-none border border-dark-500 rounded placeholder-dark-300 w-full py-2 px-3 text-white leading-tight focus:outline-none bg-dark-600', {\n      'border-red-600': !!nameError\n    }),\n    id: \"name\",\n    type: \"text\",\n    autoComplete: \"none\",\n    placeholder: \"John Doe\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), nameError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-red-500 text-xs italic mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, nameError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-200 text-sm font-bold mb-2 uppercase\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: `shadow appearance-none border ${usernameError ? 'border-red-600' : ''} border-dark-500 rounded placeholder-dark-300 w-full py-2 px-3 text-white leading-tight focus:outline-none bg-dark-600`,\n    id: \"email\",\n    type: \"text\",\n    autoComplete: \"none\",\n    placeholder: \"johndoe739\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), usernameError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-red-500 text-xs italic mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, usernameError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-200 text-sm font-bold mb-2 uppercase\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classnames('shadow appearance-none border border-dark-500 rounded w-full placeholder-dark-300 py-2 px-3 text-white leading-tight focus:outline-none bg-dark-600', {\n      'border-red-600': !!passError\n    }),\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"********\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), passError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-red-500 text-xs italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, passError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-gray-200 text-sm font-bold mb-2 uppercase\",\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classnames('shadow appearance-none border border-dark-500 rounded w-full placeholder-dark-300 py-2 px-3 text-white mb-3 leading-tight focus:outline-none bg-dark-600', {\n      'border-red-600': !!confirmPassError\n    }),\n    id: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"********\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), confirmPassError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-red-500 text-xs italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, confirmPassError)), (!!submissionError || success) && /*#__PURE__*/React.createElement(\"p\", {\n    className: classnames('mb-4 text-xs italic', {\n      'text-red-500': !!submissionError,\n      'text-green-300': success\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, submissionError !== null && submissionError !== void 0 ? submissionError : 'Conta criada com sucesso!'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col md:flex-row items-center justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onLogin,\n    className: `bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${signingUp ? 'opacity-50 cursor-not-allowed' : 'hover:bg-red-600'}`,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Sign In\")))) : /*#__PURE__*/React.createElement(Redirect, {\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/pages/Auth/SignUp/index.tsx"],"names":["React","useEffect","useState","Redirect","classnames","useSelector","signup","Login","user","state","userReducer","submissionError","setSubmissionError","signingUp","setSigningUp","success","setSuccess","name","setName","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","nameError","setNameError","usernameError","setUsernameError","passError","setPassError","confirmPassError","setConfirmPassError","validateInputs","trim","clear","onLogin","e","preventDefault","response","email","message","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../../store'\nimport { signup } from '../../../services/auth.service'\n\nconst Login: React.FC = () => {\n  const user = useSelector((state: RootState) => state.userReducer.user)\n  const [submissionError, setSubmissionError] = useState<string>()\n  const [signingUp, setSigningUp] = useState<boolean>(false)\n  const [success, setSuccess] = useState<boolean>(false)\n  const [name, setName] = useState<string>('')\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\n  const [nameError, setNameError] = useState<string>('')\n  const [usernameError, setUsernameError] = useState<string>('')\n  const [passError, setPassError] = useState<string>('')\n  const [confirmPassError, setConfirmPassError] = useState<string>('')\n\n  useEffect(() => {\n    if (name) setNameError('')\n    if (username) setUsernameError('')\n    if (password) setPassError('')\n    if (confirmPassword) setConfirmPassError('')\n  }, [username, password, confirmPassword, name])\n\n  const validateInputs = () => {\n    if (!name.trim()) setNameError(`'Name' is required`)\n    if (!username.trim()) setUsernameError(`'Username' is required`)\n    if (!password.trim()) setPassError(`'Password' is required`)\n    if (!confirmPassword.trim())\n      setConfirmPassError(`'Confirm password' is required`)\n  }\n\n  const clear = () => {\n    setName('')\n    setUsername('')\n    setPassword('')\n    setConfirmPassword('')\n  }\n\n  const onLogin = async (e: any) => {\n    e.preventDefault()\n    if (!signingUp) {\n      validateInputs()\n\n      if (username && password) {\n        setSigningUp(true)\n        const response = await signup({\n          name,\n          email: username,\n          password,\n          confirmPassword,\n        })\n\n        if (!response.success) setSubmissionError(response.message)\n        else clear()\n\n        setSuccess(response.success)\n        setSigningUp(false)\n      }\n    }\n  }\n\n  return !user ? (\n    <section className=\"w-full h-full flex items-center justify-center\">\n      <form\n        className=\"bg-dark-700 w-full mt-5 mx-3 md:mx-0 md:w-1/2 px-3 py-2 md:px-8 md:py-6 rounded-lg\"\n        onSubmit={onLogin}\n      >\n        <div className=\"mb-6\">\n          <label\n            className=\"block text-gray-200 text-sm font-bold mb-2 uppercase\"\n            htmlFor=\"name\"\n          >\n            Name\n          </label>\n          <input\n            className={classnames(\n              'shadow appearance-none border border-dark-500 rounded placeholder-dark-300 w-full py-2 px-3 text-white leading-tight focus:outline-none bg-dark-600',\n              {\n                'border-red-600': !!nameError,\n              }\n            )}\n            id=\"name\"\n            type=\"text\"\n            autoComplete=\"none\"\n            placeholder=\"John Doe\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          {nameError && (\n            <p className=\"text-red-500 text-xs italic mt-2\">{nameError}</p>\n          )}\n        </div>\n        <div className=\"mb-6\">\n          <label\n            className=\"block text-gray-200 text-sm font-bold mb-2 uppercase\"\n            htmlFor=\"email\"\n          >\n            Username\n          </label>\n          <input\n            className={`shadow appearance-none border ${\n              usernameError ? 'border-red-600' : ''\n            } border-dark-500 rounded placeholder-dark-300 w-full py-2 px-3 text-white leading-tight focus:outline-none bg-dark-600`}\n            id=\"email\"\n            type=\"text\"\n            autoComplete=\"none\"\n            placeholder=\"johndoe739\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          {usernameError && (\n            <p className=\"text-red-500 text-xs italic mt-2\">{usernameError}</p>\n          )}\n        </div>\n        <div className=\"mb-6\">\n          <label\n            className=\"block text-gray-200 text-sm font-bold mb-2 uppercase\"\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            className={classnames(\n              'shadow appearance-none border border-dark-500 rounded w-full placeholder-dark-300 py-2 px-3 text-white leading-tight focus:outline-none bg-dark-600',\n              {\n                'border-red-600': !!passError,\n              }\n            )}\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"********\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {passError && (\n            <p className=\"text-red-500 text-xs italic\">{passError}</p>\n          )}\n        </div>\n        <div className=\"mb-6\">\n          <label\n            className=\"block text-gray-200 text-sm font-bold mb-2 uppercase\"\n            htmlFor=\"confirmPassword\"\n          >\n            Confirm Password\n          </label>\n          <input\n            className={classnames(\n              'shadow appearance-none border border-dark-500 rounded w-full placeholder-dark-300 py-2 px-3 text-white mb-3 leading-tight focus:outline-none bg-dark-600',\n              {\n                'border-red-600': !!confirmPassError,\n              }\n            )}\n            id=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"********\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          {confirmPassError && (\n            <p className=\"text-red-500 text-xs italic\">{confirmPassError}</p>\n          )}\n        </div>\n        {(!!submissionError || success) && (\n          <p\n            className={classnames('mb-4 text-xs italic', {\n              'text-red-500': !!submissionError,\n              'text-green-300': success,\n            })}\n          >\n            {submissionError ?? 'Conta criada com sucesso!'}\n          </p>\n        )}\n        <div className=\"flex flex-col md:flex-row items-center justify-between\">\n          <button\n            onClick={onLogin}\n            className={`bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\n              signingUp ? 'opacity-50 cursor-not-allowed' : 'hover:bg-red-600'\n            }`}\n            type=\"submit\"\n          >\n            Sign In\n          </button>\n        </div>\n      </form>\n    </section>\n  ) : (\n    <Redirect to={'/'} />\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}