{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { callAPI } from '../services/request.service';\n\nconst useGameDetails = (appId, deps = []) => {\n  const [loading, setLoading] = useState(true);\n  const [details, setDetails] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    const getAppDetails = async () => {\n      setLoading(true);\n      const response = await callAPI(`steam/appdetails/${appId}`, 'GET', null);\n\n      if (response.success) {\n        const {\n          data\n        } = response;\n        console.log(data);\n        setDetails({\n          game: {\n            steamAppId: appId,\n            name: data.name,\n            imageUrl: data.header_image\n          },\n          developers: data.developers,\n          publishers: data.publishers,\n          description: data.short_description,\n          screenshots: data.screenshots,\n          movies: data.movies\n        });\n      } else {\n        if (response.status === 404) setError('Couldn\\'t find the game :(');else setError(response.message);\n      }\n\n      setLoading(false);\n    };\n\n    getAppDetails();\n  }, [appId, ...deps]);\n  return {\n    loading,\n    details,\n    error\n  };\n};\n\nexport default useGameDetails;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/hooks/useGameDetails.ts"],"names":["useState","useEffect","callAPI","useGameDetails","appId","deps","loading","setLoading","details","setDetails","error","setError","getAppDetails","response","success","data","console","log","game","steamAppId","name","imageUrl","header_image","developers","publishers","description","short_description","screenshots","movies","status","message"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAgBC,IAAW,GAAG,EAA9B,KAAwD;AAC7E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAG,YAAY;AAChCL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,QAAQ,GAAG,MAAMX,OAAO,CAAE,oBAAmBE,KAAM,EAA3B,EAA8B,KAA9B,EAAqC,IAArC,CAA9B;;AAEA,UAAIS,QAAQ,CAACC,OAAb,EAAsB;AACpB,cAAM;AAAEC,UAAAA;AAAF,YAAWF,QAAjB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,QAAAA,UAAU,CAAC;AACTS,UAAAA,IAAI,EAAE;AACJC,YAAAA,UAAU,EAAEf,KADR;AAEJgB,YAAAA,IAAI,EAAEL,IAAI,CAACK,IAFP;AAGJC,YAAAA,QAAQ,EAAEN,IAAI,CAACO;AAHX,WADG;AAMTC,UAAAA,UAAU,EAAER,IAAI,CAACQ,UANR;AAOTC,UAAAA,UAAU,EAAET,IAAI,CAACS,UAPR;AAQTC,UAAAA,WAAW,EAAEV,IAAI,CAACW,iBART;AASTC,UAAAA,WAAW,EAAEZ,IAAI,CAACY,WATT;AAUTC,UAAAA,MAAM,EAAEb,IAAI,CAACa;AAVJ,SAAD,CAAV;AAYD,OAfD,MAeO;AACL,YAAIf,QAAQ,CAACgB,MAAT,KAAoB,GAAxB,EAA6BlB,QAAQ,CAAC,4BAAD,CAAR,CAA7B,KACKA,QAAQ,CAACE,QAAQ,CAACiB,OAAV,CAAR;AACN;;AAEDvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAzBD;;AA2BAK,IAAAA,aAAa;AACd,GA7BQ,EA6BN,CAACR,KAAD,EAAQ,GAAGC,IAAX,CA7BM,CAAT;AA+BA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,OAAX;AAAoBE,IAAAA;AAApB,GAAP;AACD,CArCD;;AAuCA,eAAeP,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { callAPI } from '../services/request.service'\n\ninterface ObjectGameDetails {\n  loading: boolean;\n  details: IGameDetails | undefined;\n  error: string | undefined;\n}\n\nconst useGameDetails = (appId: string, deps: any[] = []): ObjectGameDetails => {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [details, setDetails] = useState<IGameDetails>()\n  const [error, setError] = useState<string>()\n\n  useEffect(() => {\n    const getAppDetails = async () => {\n      setLoading(true)\n      const response = await callAPI(`steam/appdetails/${appId}`, 'GET', null)\n\n      if (response.success) {\n        const { data } = response\n        console.log(data)\n        setDetails({\n          game: {\n            steamAppId: appId,\n            name: data.name,\n            imageUrl: data.header_image,\n          },\n          developers: data.developers,\n          publishers: data.publishers,\n          description: data.short_description,\n          screenshots: data.screenshots,\n          movies: data.movies,\n        })\n      } else {\n        if (response.status === 404) setError('Couldn\\'t find the game :(')\n        else setError(response.message)\n      }\n\n      setLoading(false)\n    }\n\n    getAppDetails()\n  }, [appId, ...deps])\n\n  return { loading, details, error }\n}\n\nexport default useGameDetails\n"]},"metadata":{},"sourceType":"module"}