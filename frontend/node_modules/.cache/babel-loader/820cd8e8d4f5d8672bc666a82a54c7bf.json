{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport querystring from 'query-string';\nimport { callAPI } from '../services/request.service';\nimport { DEFAULT_PAGE_SIZE } from '../constants';\n\nconst useGameSearch = (searchTerm, deps = []) => {\n  const [loading, setLoading] = useState(true);\n  const [searchResult, setSearchResult] = useState();\n  const [error, setError] = useState();\n\n  const getSearchResults = async (page = 1, limit = DEFAULT_PAGE_SIZE) => {\n    const query = querystring.stringify({\n      search: searchTerm,\n      page,\n      limit\n    });\n    const response = await callAPI(`steam/find?${query}`, 'GET', null);\n\n    if (response.success) {\n      const {\n        data\n      } = response;\n      setSearchResult(data);\n    } else {\n      if (response.status === 404) setError('0 results match your search');else setError(response.message);\n    }\n\n    setLoading(false);\n  };\n\n  const update = (page, limit) => {\n    setLoading(true);\n    getSearchResults(page, limit);\n  };\n\n  useEffect(() => {\n    getSearchResults();\n  }, [searchTerm, ...deps]);\n  return {\n    loading,\n    searchResult,\n    error,\n    update\n  };\n};\n\nexport default useGameSearch;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/hooks/useGameSearch.ts"],"names":["useState","useEffect","querystring","callAPI","DEFAULT_PAGE_SIZE","useGameSearch","searchTerm","deps","loading","setLoading","searchResult","setSearchResult","error","setError","getSearchResults","page","limit","query","stringify","search","response","success","data","status","message","update"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AASA,MAAMC,aAAa,GAAG,CACpBC,UADoB,EAEpBC,IAAW,GAAG,EAFM,KAGC;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;;AAEA,QAAMc,gBAAgB,GAAG,OACvBC,IAAY,GAAG,CADQ,EAEvBC,KAAa,GAAGZ,iBAFO,KAGpB;AACH,UAAMa,KAAK,GAAGf,WAAW,CAACgB,SAAZ,CAAsB;AAClCC,MAAAA,MAAM,EAAEb,UAD0B;AAElCS,MAAAA,IAFkC;AAGlCC,MAAAA;AAHkC,KAAtB,CAAd;AAKA,UAAMI,QAAQ,GAAG,MAAMjB,OAAO,CAAE,cAAac,KAAM,EAArB,EAAwB,KAAxB,EAA+B,IAA/B,CAA9B;;AAEA,QAAIG,QAAQ,CAACC,OAAb,EAAsB;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAWF,QAAjB;AACAT,MAAAA,eAAe,CAACW,IAAD,CAAf;AACD,KAHD,MAGO;AACL,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6BV,QAAQ,CAAC,6BAAD,CAAR,CAA7B,KACKA,QAAQ,CAACO,QAAQ,CAACI,OAAV,CAAR;AACN;;AAEDf,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GApBD;;AAsBA,QAAMgB,MAAM,GAAG,CAACV,IAAD,EAAgBC,KAAhB,KAAmC;AAChDP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,gBAAgB,CAACC,IAAD,EAAOC,KAAP,CAAhB;AACD,GAHD;;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACR,UAAD,EAAa,GAAGC,IAAhB,CAFM,CAAT;AAIA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,YAAX;AAAyBE,IAAAA,KAAzB;AAAgCa,IAAAA;AAAhC,GAAP;AACD,CAxCD;;AA0CA,eAAepB,aAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react'\nimport querystring from 'query-string'\nimport { callAPI } from '../services/request.service'\nimport { DEFAULT_PAGE_SIZE } from '../constants'\n\ninterface ObjectGameSearch {\n  loading: boolean\n  searchResult: PaginatedResult<IGame> | undefined\n  error: string | undefined\n  update: (page?: number, limit?: number) => void\n}\n\nconst useGameSearch = (\n  searchTerm: string,\n  deps: any[] = []\n): ObjectGameSearch => {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [searchResult, setSearchResult] = useState<PaginatedResult<IGame>>()\n  const [error, setError] = useState<string>()\n\n  const getSearchResults = async (\n    page: number = 1,\n    limit: number = DEFAULT_PAGE_SIZE\n  ) => {\n    const query = querystring.stringify({\n      search: searchTerm,\n      page,\n      limit,\n    })\n    const response = await callAPI(`steam/find?${query}`, 'GET', null)\n\n    if (response.success) {\n      const { data } = response\n      setSearchResult(data)\n    } else {\n      if (response.status === 404) setError('0 results match your search')\n      else setError(response.message)\n    }\n\n    setLoading(false)\n  }\n\n  const update = (page?: number, limit?: number) => {\n    setLoading(true)\n    getSearchResults(page, limit)\n  }\n\n  useEffect(() => {\n    getSearchResults()\n  }, [searchTerm, ...deps])\n\n  return { loading, searchResult, error, update }\n}\n\nexport default useGameSearch\n"]},"metadata":{},"sourceType":"module"}