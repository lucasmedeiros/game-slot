{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n} // Tracks portals that are open and emits events to subscribers\n\n\nvar PortalOpenInstances = function PortalOpenInstances() {\n  var _this = this;\n\n  _classCallCheck(this, PortalOpenInstances);\n\n  this.register = function (openInstance) {\n    if (_this.openInstances.indexOf(openInstance) !== -1) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // eslint-disable-next-line no-console\n        console.warn(\"React-Modal: Cannot register modal instance that's already open\");\n      }\n\n      return;\n    }\n\n    _this.openInstances.push(openInstance);\n\n    _this.emit(\"register\");\n  };\n\n  this.deregister = function (openInstance) {\n    var index = _this.openInstances.indexOf(openInstance);\n\n    if (index === -1) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // eslint-disable-next-line no-console\n        console.warn(\"React-Modal: Unable to deregister \" + openInstance + \" as \" + \"it was never registered\");\n      }\n\n      return;\n    }\n\n    _this.openInstances.splice(index, 1);\n\n    _this.emit(\"deregister\");\n  };\n\n  this.subscribe = function (callback) {\n    _this.subscribers.push(callback);\n  };\n\n  this.emit = function (eventType) {\n    _this.subscribers.forEach(function (subscriber) {\n      return subscriber(eventType, // shallow copy to avoid accidental mutation\n      _this.openInstances.slice());\n    });\n  };\n\n  this.openInstances = [];\n  this.subscribers = [];\n};\n\nvar portalOpenInstances = new PortalOpenInstances();\nexports.default = portalOpenInstances;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/home/lucas/Git/game-slot/node_modules/react-modal/lib/helpers/portalOpenInstances.js"],"names":["Object","defineProperty","exports","value","_classCallCheck","instance","Constructor","TypeError","PortalOpenInstances","_this","register","openInstance","openInstances","indexOf","process","env","NODE_ENV","console","warn","push","emit","deregister","index","splice","subscribe","callback","subscribers","eventType","forEach","subscriber","slice","portalOpenInstances","default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE,C,CAEzJ;;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,GAA+B;AACvD,MAAIC,KAAK,GAAG,IAAZ;;AAEAL,EAAAA,eAAe,CAAC,IAAD,EAAOI,mBAAP,CAAf;;AAEA,OAAKE,QAAL,GAAgB,UAAUC,YAAV,EAAwB;AACtC,QAAIF,KAAK,CAACG,aAAN,CAAoBC,OAApB,CAA4BF,YAA5B,MAA8C,CAAC,CAAnD,EAAsD;AACpD,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAC,QAAAA,OAAO,CAACC,IAAR,CAAa,iEAAb;AACD;;AACD;AACD;;AACDT,IAAAA,KAAK,CAACG,aAAN,CAAoBO,IAApB,CAAyBR,YAAzB;;AACAF,IAAAA,KAAK,CAACW,IAAN,CAAW,UAAX;AACD,GAVD;;AAYA,OAAKC,UAAL,GAAkB,UAAUV,YAAV,EAAwB;AACxC,QAAIW,KAAK,GAAGb,KAAK,CAACG,aAAN,CAAoBC,OAApB,CAA4BF,YAA5B,CAAZ;;AACA,QAAIW,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,UAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAC,QAAAA,OAAO,CAACC,IAAR,CAAa,uCAAuCP,YAAvC,GAAsD,MAAtD,GAA+D,yBAA5E;AACD;;AACD;AACD;;AACDF,IAAAA,KAAK,CAACG,aAAN,CAAoBW,MAApB,CAA2BD,KAA3B,EAAkC,CAAlC;;AACAb,IAAAA,KAAK,CAACW,IAAN,CAAW,YAAX;AACD,GAXD;;AAaA,OAAKI,SAAL,GAAiB,UAAUC,QAAV,EAAoB;AACnChB,IAAAA,KAAK,CAACiB,WAAN,CAAkBP,IAAlB,CAAuBM,QAAvB;AACD,GAFD;;AAIA,OAAKL,IAAL,GAAY,UAAUO,SAAV,EAAqB;AAC/BlB,IAAAA,KAAK,CAACiB,WAAN,CAAkBE,OAAlB,CAA0B,UAAUC,UAAV,EAAsB;AAC9C,aAAOA,UAAU,CAACF,SAAD,EACjB;AACAlB,MAAAA,KAAK,CAACG,aAAN,CAAoBkB,KAApB,EAFiB,CAAjB;AAGD,KAJD;AAKD,GAND;;AAQA,OAAKlB,aAAL,GAAqB,EAArB;AACA,OAAKc,WAAL,GAAmB,EAAnB;AACD,CA5CD;;AA8CA,IAAIK,mBAAmB,GAAG,IAAIvB,mBAAJ,EAA1B;AAEAN,OAAO,CAAC8B,OAAR,GAAkBD,mBAAlB;AACAE,MAAM,CAAC/B,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Tracks portals that are open and emits events to subscribers\n\nvar PortalOpenInstances = function PortalOpenInstances() {\n  var _this = this;\n\n  _classCallCheck(this, PortalOpenInstances);\n\n  this.register = function (openInstance) {\n    if (_this.openInstances.indexOf(openInstance) !== -1) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // eslint-disable-next-line no-console\n        console.warn(\"React-Modal: Cannot register modal instance that's already open\");\n      }\n      return;\n    }\n    _this.openInstances.push(openInstance);\n    _this.emit(\"register\");\n  };\n\n  this.deregister = function (openInstance) {\n    var index = _this.openInstances.indexOf(openInstance);\n    if (index === -1) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // eslint-disable-next-line no-console\n        console.warn(\"React-Modal: Unable to deregister \" + openInstance + \" as \" + \"it was never registered\");\n      }\n      return;\n    }\n    _this.openInstances.splice(index, 1);\n    _this.emit(\"deregister\");\n  };\n\n  this.subscribe = function (callback) {\n    _this.subscribers.push(callback);\n  };\n\n  this.emit = function (eventType) {\n    _this.subscribers.forEach(function (subscriber) {\n      return subscriber(eventType,\n      // shallow copy to avoid accidental mutation\n      _this.openInstances.slice());\n    });\n  };\n\n  this.openInstances = [];\n  this.subscribers = [];\n};\n\nvar portalOpenInstances = new PortalOpenInstances();\n\nexports.default = portalOpenInstances;\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}