{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { callAPI } from '../services/request.service';\n\nconst useUserReview = (gameId, user, deps = []) => {\n  const [loading, setLoading] = useState(true);\n  const [existingReview, setExistingReview] = useState(false);\n  const [review, setReview] = useState(null);\n\n  const getUserReview = async () => {\n    if (user) {\n      const response = await callAPI(`review/user/${gameId}`, 'GET', null);\n      setReview(response.success ? response.data : null);\n      setExistingReview(response.success ? response.data !== null : false);\n    }\n\n    setLoading(false);\n  };\n\n  const update = () => {\n    getUserReview();\n  };\n\n  useEffect(() => {\n    getUserReview();\n  }, [gameId, ...deps]);\n  return {\n    loading,\n    existingReview,\n    review,\n    update\n  };\n};\n\nexport default useUserReview;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/hooks/useUserReview.ts"],"names":["useState","useEffect","callAPI","useUserReview","gameId","user","deps","loading","setLoading","existingReview","setExistingReview","review","setReview","getUserReview","response","success","data","update"],"mappings":"AAAA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AASA,MAAMC,aAAa,GAAG,CACpBC,MADoB,EAEpBC,IAFoB,EAGpBC,IAAW,GAAG,EAHM,KAIC;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAU,KAAV,CAApD;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAqB,IAArB,CAApC;;AAEA,QAAMa,aAAa,GAAG,YAAY;AAChC,QAAIR,IAAJ,EAAU;AACR,YAAMS,QAAQ,GAAG,MAAMZ,OAAO,CAAE,eAAcE,MAAO,EAAvB,EAA0B,KAA1B,EAAiC,IAAjC,CAA9B;AACAQ,MAAAA,SAAS,CAACE,QAAQ,CAACC,OAAT,GAAmBD,QAAQ,CAACE,IAA5B,GAAmC,IAApC,CAAT;AACAN,MAAAA,iBAAiB,CAACI,QAAQ,CAACC,OAAT,GAAmBD,QAAQ,CAACE,IAAT,KAAkB,IAArC,GAA4C,KAA7C,CAAjB;AACD;;AACDR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AASA,QAAMS,MAAM,GAAG,MAAM;AACnBJ,IAAAA,aAAa;AACd,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACT,MAAD,EAAS,GAAGE,IAAZ,CAFM,CAAT;AAIA,SAAO;AACLC,IAAAA,OADK;AAELE,IAAAA,cAFK;AAGLE,IAAAA,MAHK;AAILM,IAAAA;AAJK,GAAP;AAMD,CAhCD;;AAkCA,eAAed,aAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { IGameReview } from './useGameReviews'\nimport { useState, useEffect } from 'react'\nimport { callAPI } from '../services/request.service'\n\ninterface ObjectUserReview {\n  loading: boolean\n  existingReview: boolean\n  update: () => void\n  review: IGameReview | null\n}\n\nconst useUserReview = (\n  gameId: string,\n  user?: IUser,\n  deps: any[] = []\n): ObjectUserReview => {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [existingReview, setExistingReview] = useState<boolean>(false)\n  const [review, setReview] = useState<IGameReview | null>(null)\n\n  const getUserReview = async () => {\n    if (user) {\n      const response = await callAPI(`review/user/${gameId}`, 'GET', null)\n      setReview(response.success ? response.data : null)\n      setExistingReview(response.success ? response.data !== null : false)\n    }\n    setLoading(false)\n  }\n\n  const update = () => {\n    getUserReview()\n  }\n\n  useEffect(() => {\n    getUserReview()\n  }, [gameId, ...deps])\n\n  return {\n    loading,\n    existingReview,\n    review,\n    update,\n  }\n}\n\nexport default useUserReview\n"]},"metadata":{},"sourceType":"module"}