{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport Swiper from 'swiper';\nimport { useMediaQuery } from 'react-responsive';\nimport devices from '../styles/devices';\n\nconst useGameSwiper = () => {\n  const swiperContainerName = 'swiper-container';\n  const swiperWrapperName = 'swiper-wrapper';\n  const nextElName = 'swiper-button-next';\n  const prevElName = 'swiper-button-prev';\n  const [slidesNumber, setSlidesNumber] = useState(4);\n  const maxMobile = useMediaQuery({\n    query: devices.mobileL\n  });\n  const minTablet = useMediaQuery({\n    query: devices.tablet\n  });\n  const minLapTop = useMediaQuery({\n    query: devices.laptop\n  });\n  useEffect(() => {\n    if (minLapTop) {\n      setSlidesNumber(4);\n    } else if (minTablet) {\n      setSlidesNumber(3);\n    } else if (maxMobile) {\n      setSlidesNumber(2);\n    } else {\n      setSlidesNumber(1);\n    }\n  }, [minTablet, minLapTop, maxMobile]);\n  useEffect(() => {\n    new Swiper(`.${swiperContainerName}`, {\n      direction: 'horizontal',\n      slidesPerView: slidesNumber,\n      slidesPerGroup: slidesNumber,\n      spaceBetween: 10,\n      navigation: {\n        nextEl: `.${nextElName}`,\n        prevEl: `.${prevElName}`\n      },\n      loop: false\n    });\n  }, [slidesNumber]);\n  return {\n    nextElName,\n    prevElName,\n    swiperContainerName,\n    swiperWrapperName\n  };\n};\n\nexport default useGameSwiper;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/hooks/useGameSwiper.ts"],"names":["useEffect","useState","Swiper","useMediaQuery","devices","useGameSwiper","swiperContainerName","swiperWrapperName","nextElName","prevElName","slidesNumber","setSlidesNumber","maxMobile","query","mobileL","minTablet","tablet","minLapTop","laptop","direction","slidesPerView","slidesPerGroup","spaceBetween","navigation","nextEl","prevEl","loop"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AASA,MAAMC,aAAa,GAAG,MAAwB;AAC5C,QAAMC,mBAAmB,GAAG,kBAA5B;AACA,QAAMC,iBAAiB,GAAG,gBAA1B;AACA,QAAMC,UAAU,GAAG,oBAAnB;AACA,QAAMC,UAAU,GAAG,oBAAnB;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAMW,SAAS,GAAGT,aAAa,CAAC;AAAEU,IAAAA,KAAK,EAAET,OAAO,CAACU;AAAjB,GAAD,CAA/B;AACA,QAAMC,SAAS,GAAGZ,aAAa,CAAC;AAAEU,IAAAA,KAAK,EAAET,OAAO,CAACY;AAAjB,GAAD,CAA/B;AACA,QAAMC,SAAS,GAAGd,aAAa,CAAC;AAAEU,IAAAA,KAAK,EAAET,OAAO,CAACc;AAAjB,GAAD,CAA/B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,SAAJ,EAAe;AACbN,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAFD,MAEO,IAAII,SAAJ,EAAe;AACpBJ,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAFM,MAEA,IAAIC,SAAJ,EAAe;AACpBD,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAFM,MAEA;AACLA,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD;AACF,GAVQ,EAUN,CAACI,SAAD,EAAYE,SAAZ,EAAuBL,SAAvB,CAVM,CAAT;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,MAAJ,CAAY,IAAGI,mBAAoB,EAAnC,EAAsC;AACpCa,MAAAA,SAAS,EAAE,YADyB;AAEpCC,MAAAA,aAAa,EAAEV,YAFqB;AAGpCW,MAAAA,cAAc,EAAEX,YAHoB;AAIpCY,MAAAA,YAAY,EAAE,EAJsB;AAKpCC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAG,IAAGhB,UAAW,EADb;AAEViB,QAAAA,MAAM,EAAG,IAAGhB,UAAW;AAFb,OALwB;AASpCiB,MAAAA,IAAI,EAAE;AAT8B,KAAtC;AAWD,GAZQ,EAYN,CAAChB,YAAD,CAZM,CAAT;AAcA,SAAO;AACLF,IAAAA,UADK;AAELC,IAAAA,UAFK;AAGLH,IAAAA,mBAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CA3CD;;AA6CA,eAAeF,aAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Swiper from 'swiper'\nimport { useMediaQuery } from 'react-responsive'\nimport devices from '../styles/devices'\n\ninterface GameSwiperObject {\n  swiperContainerName: string\n  swiperWrapperName: string\n  nextElName: string\n  prevElName: string\n}\n\nconst useGameSwiper = (): GameSwiperObject => {\n  const swiperContainerName = 'swiper-container'\n  const swiperWrapperName = 'swiper-wrapper'\n  const nextElName = 'swiper-button-next'\n  const prevElName = 'swiper-button-prev'\n\n  const [slidesNumber, setSlidesNumber] = useState<number>(4)\n  const maxMobile = useMediaQuery({ query: devices.mobileL })\n  const minTablet = useMediaQuery({ query: devices.tablet })\n  const minLapTop = useMediaQuery({ query: devices.laptop })\n\n  useEffect(() => {\n    if (minLapTop) {\n      setSlidesNumber(4)\n    } else if (minTablet) {\n      setSlidesNumber(3)\n    } else if (maxMobile) {\n      setSlidesNumber(2)\n    } else {\n      setSlidesNumber(1)\n    }\n  }, [minTablet, minLapTop, maxMobile])\n\n  useEffect(() => {\n    new Swiper(`.${swiperContainerName}`, {\n      direction: 'horizontal',\n      slidesPerView: slidesNumber,\n      slidesPerGroup: slidesNumber,\n      spaceBetween: 10,\n      navigation: {\n        nextEl: `.${nextElName}`,\n        prevEl: `.${prevElName}`,\n      },\n      loop: false,\n    })\n  }, [slidesNumber])\n\n  return {\n    nextElName,\n    prevElName,\n    swiperContainerName,\n    swiperWrapperName,\n  }\n}\n\nexport default useGameSwiper\n"]},"metadata":{},"sourceType":"module"}