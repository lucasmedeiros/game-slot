{"ast":null,"code":"/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = typeof document === 'undefined' ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: ''\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {}\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      }\n    };\n  },\n  location: {\n    hash: ''\n  }\n} : document; // eslint-disable-line\n\nvar win = typeof window === 'undefined' ? {\n  document: doc,\n  navigator: {\n    userAgent: ''\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      }\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {}\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };","map":{"version":3,"sources":["/home/lucas/Git/game-slot/node_modules/ssr-window/dist/ssr-window.esm.js"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout"],"mappings":"AAAA;;;;;;;;;;;AAWA,IAAIA,GAAG,GAAI,OAAOC,QAAP,KAAoB,WAArB,GAAoC;AAC5CC,EAAAA,IAAI,EAAE,EADsC;AAE5CC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B,CAAE,CAFJ;AAG5CC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B,CAAE,CAHV;AAI5CC,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB,CAAE,CADX;AAEbC,IAAAA,QAAQ,EAAE;AAFG,GAJ6B;AAQ5CC,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,WAAO,IAAP;AACD,GAV2C;AAW5CC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,WAAO,EAAP;AACD,GAb2C;AAc5CC,EAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,WAAO,IAAP;AACD,GAhB2C;AAiB5CC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,WAAO;AACLC,MAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB,CAAE;AAD7B,KAAP;AAGD,GArB2C;AAsB5CC,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,WAAO;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,UAAU,EAAE,EAFP;AAGLC,MAAAA,KAAK,EAAE,EAHF;AAILC,MAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB,CAAE,CAJnC;AAKLC,MAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,eAAO,EAAP;AACD;AAPI,KAAP;AASD,GAhC2C;AAiC5CC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR;AAjCkC,CAApC,GAkCNnB,QAlCJ,C,CAkCc;;AAEd,IAAIoB,GAAG,GAAI,OAAOC,MAAP,KAAkB,WAAnB,GAAkC;AAC1CrB,EAAAA,QAAQ,EAAED,GADgC;AAE1CuB,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GAF+B;AAK1CL,EAAAA,QAAQ,EAAE,EALgC;AAM1CM,EAAAA,OAAO,EAAE,EANiC;AAO1CC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,WAAO,IAAP;AACD,GATyC;AAU1CvB,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B,CAAE,CAVN;AAW1CC,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B,CAAE,CAXZ;AAY1CuB,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,WAAO;AACLC,MAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,eAAO,EAAP;AACD;AAHI,KAAP;AAKD,GAlByC;AAmB1CC,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB,CAAE,CAnBgB;AAoB1CC,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB,CAAE,CApBkB;AAqB1CC,EAAAA,MAAM,EAAE,EArBkC;AAsB1CC,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB,CAAE,CAtBM;AAuB1CC,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB,CAAE;AAvBE,CAAlC,GAwBNX,MAxBJ,C,CAwBY;;AAEZ,SAASD,GAAG,IAAIC,MAAhB,EAAwBtB,GAAG,IAAIC,QAA/B","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n"]},"metadata":{},"sourceType":"module"}