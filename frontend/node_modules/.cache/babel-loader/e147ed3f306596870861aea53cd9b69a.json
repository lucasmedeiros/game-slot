{"ast":null,"code":"import { callAPI } from '../services/request.service';\nimport { useState } from 'react';\n\nconst useReviewActions = () => {\n  const [submiting, setSubmiting] = useState(false);\n\n  const create = async ({\n    gameId,\n    text = '',\n    recommendation\n  }) => {\n    setSubmiting(true);\n    const response = await callAPI('review', 'POST', {\n      gameId,\n      recommendation: recommendation !== null && recommendation !== void 0 ? recommendation : 'yes',\n      text\n    });\n    setSubmiting(false);\n    if (response.success) return response.data;\n    throw new Error(response.message);\n  };\n\n  const update = async ({\n    reviewId,\n    recommendation,\n    text\n  }) => {\n    setSubmiting(true);\n    const response = await callAPI(`review/${reviewId}`, 'PUT', {\n      recommendation: recommendation,\n      text\n    });\n    setSubmiting(false);\n    if (response.success) return response.data;\n    throw new Error(response.message);\n  };\n\n  const remove = async ({\n    reviewId\n  }) => {\n    setSubmiting(true);\n    const response = await callAPI(`review/${reviewId}`, 'DELETE', null);\n    setSubmiting(false);\n    if (!response.success) throw new Error(response.message);\n  };\n\n  return {\n    create,\n    submiting,\n    update,\n    remove\n  };\n};\n\nexport default useReviewActions;","map":{"version":3,"sources":["/home/lucas/Git/game-slot/src/hooks/useReviewActions.ts"],"names":["callAPI","useState","useReviewActions","submiting","setSubmiting","create","gameId","text","recommendation","response","success","data","Error","message","update","reviewId","remove"],"mappings":"AAAA,SAASA,OAAT,QAAwB,6BAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAyBA,MAAMC,gBAAgB,GAAG,MAA2B;AAClD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAU,KAAV,CAA1C;;AAEA,QAAMI,MAAM,GAAG,OAAO;AACpBC,IAAAA,MADoB;AAEpBC,IAAAA,IAAI,GAAG,EAFa;AAGpBC,IAAAA;AAHoB,GAAP,KAQT;AACJJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMT,OAAO,CAAC,QAAD,EAAW,MAAX,EAAmB;AAC/CM,MAAAA,MAD+C;AAE/CE,MAAAA,cAAc,EAAEA,cAAF,aAAEA,cAAF,cAAEA,cAAF,GAAoB,KAFa;AAG/CD,MAAAA;AAH+C,KAAnB,CAA9B;AAMAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEA,QAAIK,QAAQ,CAACC,OAAb,EAAsB,OAAOD,QAAQ,CAACE,IAAhB;AAEtB,UAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAAN;AACD,GAtBD;;AAwBA,QAAMC,MAAM,GAAG,OAAO;AACpBC,IAAAA,QADoB;AAEpBP,IAAAA,cAFoB;AAGpBD,IAAAA;AAHoB,GAAP,KAQT;AACJH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMT,OAAO,CAAE,UAASe,QAAS,EAApB,EAAuB,KAAvB,EAA8B;AAC1DP,MAAAA,cAAc,EAAEA,cAD0C;AAE1DD,MAAAA;AAF0D,KAA9B,CAA9B;AAKAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEA,QAAIK,QAAQ,CAACC,OAAb,EAAsB,OAAOD,QAAQ,CAACE,IAAhB;AAEtB,UAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAAN;AACD,GArBD;;AAuBA,QAAMG,MAAM,GAAG,OAAO;AAAED,IAAAA;AAAF,GAAP,KAA6D;AAC1EX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMT,OAAO,CAAE,UAASe,QAAS,EAApB,EAAuB,QAAvB,EAAiC,IAAjC,CAA9B;AAEAX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEA,QAAI,CAACK,QAAQ,CAACC,OAAd,EAAuB,MAAM,IAAIE,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAAN;AACxB,GARD;;AAUA,SAAO;AACLR,IAAAA,MADK;AAELF,IAAAA,SAFK;AAGLW,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CAlED;;AAoEA,eAAed,gBAAf","sourcesContent":["import { callAPI } from '../services/request.service'\nimport { useState } from 'react'\n\ninterface ReviewActionsObject {\n  submiting: boolean\n  create: ({\n    gameId,\n    recommendation,\n    text,\n  }: {\n    gameId: string\n    recommendation: RecommendationValue\n    text?: string\n  }) => Promise<any>\n  update: ({\n    reviewId,\n    recommendation,\n    text,\n  }: {\n    reviewId: string\n    recommendation: RecommendationValue\n    text?: string\n  }) => Promise<any>\n  remove: ({ reviewId }: { reviewId: string }) => Promise<void>\n}\n\nconst useReviewActions = (): ReviewActionsObject => {\n  const [submiting, setSubmiting] = useState<boolean>(false)\n\n  const create = async ({\n    gameId,\n    text = '',\n    recommendation,\n  }: {\n    gameId: string\n    recommendation: RecommendationValue\n    text?: string\n  }) => {\n    setSubmiting(true)\n\n    const response = await callAPI('review', 'POST', {\n      gameId,\n      recommendation: recommendation ?? 'yes',\n      text,\n    })\n\n    setSubmiting(false)\n\n    if (response.success) return response.data\n\n    throw new Error(response.message)\n  }\n\n  const update = async ({\n    reviewId,\n    recommendation,\n    text,\n  }: {\n    reviewId: string\n    recommendation: RecommendationValue\n    text?: string\n  }) => {\n    setSubmiting(true)\n\n    const response = await callAPI(`review/${reviewId}`, 'PUT', {\n      recommendation: recommendation,\n      text,\n    })\n\n    setSubmiting(false)\n\n    if (response.success) return response.data\n\n    throw new Error(response.message)\n  }\n\n  const remove = async ({ reviewId }: { reviewId: string }): Promise<void> => {\n    setSubmiting(true)\n\n    const response = await callAPI(`review/${reviewId}`, 'DELETE', null)\n\n    setSubmiting(false)\n\n    if (!response.success) throw new Error(response.message)\n  }\n\n  return {\n    create,\n    submiting,\n    update,\n    remove,\n  }\n}\n\nexport default useReviewActions\n"]},"metadata":{},"sourceType":"module"}