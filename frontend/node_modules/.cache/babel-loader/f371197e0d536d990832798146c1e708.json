{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dumpClassLists = dumpClassLists;\nvar htmlClassList = {};\nvar docBodyClassList = {};\n\nfunction dumpClassLists() {\n  if (process.env.NODE_ENV !== \"production\") {\n    var classes = document.getElementsByTagName(\"html\")[0].className;\n    var buffer = \"Show tracked classes:\\n\\n\";\n    buffer += \"<html /> (\" + classes + \"):\\n\";\n\n    for (var x in htmlClassList) {\n      buffer += \"  \" + x + \" \" + htmlClassList[x] + \"\\n\";\n    }\n\n    classes = document.body.className; // eslint-disable-next-line max-len\n\n    buffer += \"\\n\\ndoc.body (\" + classes + \"):\\n\";\n\n    for (var _x in docBodyClassList) {\n      buffer += \"  \" + _x + \" \" + docBodyClassList[_x] + \"\\n\";\n    }\n\n    buffer += \"\\n\"; // eslint-disable-next-line no-console\n\n    console.log(buffer);\n  }\n}\n/**\n * Track the number of reference of a class.\n * @param {object} poll The poll to receive the reference.\n * @param {string} className The class name.\n * @return {string}\n */\n\n\nvar incrementReference = function incrementReference(poll, className) {\n  if (!poll[className]) {\n    poll[className] = 0;\n  }\n\n  poll[className] += 1;\n  return className;\n};\n/**\n * Drop the reference of a class.\n * @param {object} poll The poll to receive the reference.\n * @param {string} className The class name.\n * @return {string}\n */\n\n\nvar decrementReference = function decrementReference(poll, className) {\n  if (poll[className]) {\n    poll[className] -= 1;\n  }\n\n  return className;\n};\n/**\n * Track a class and add to the given class list.\n * @param {Object} classListRef A class list of an element.\n * @param {Object} poll         The poll to be used.\n * @param {Array}  classes      The list of classes to be tracked.\n */\n\n\nvar trackClass = function trackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    incrementReference(poll, className);\n    classListRef.add(className);\n  });\n};\n/**\n * Untrack a class and remove from the given class list if the reference\n * reaches 0.\n * @param {Object} classListRef A class list of an element.\n * @param {Object} poll         The poll to be used.\n * @param {Array}  classes      The list of classes to be untracked.\n */\n\n\nvar untrackClass = function untrackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    decrementReference(poll, className);\n    poll[className] === 0 && classListRef.remove(className);\n  });\n};\n/**\n * Public inferface to add classes to the document.body.\n * @param {string} bodyClass The class string to be added.\n *                           It may contain more then one class\n *                           with ' ' as separator.\n */\n\n\nvar add = exports.add = function add(element, classString) {\n  return trackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};\n/**\n * Public inferface to remove classes from the document.body.\n * @param {string} bodyClass The class string to be added.\n *                           It may contain more then one class\n *                           with ' ' as separator.\n */\n\n\nvar remove = exports.remove = function remove(element, classString) {\n  return untrackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};","map":{"version":3,"sources":["/home/lucas/Git/game-slot/node_modules/react-modal/lib/helpers/classList.js"],"names":["Object","defineProperty","exports","value","dumpClassLists","htmlClassList","docBodyClassList","process","env","NODE_ENV","classes","document","getElementsByTagName","className","buffer","x","body","_x","console","log","incrementReference","poll","decrementReference","trackClass","classListRef","forEach","add","untrackClass","remove","element","classString","classList","nodeName","toLowerCase","split"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dumpClassLists = dumpClassLists;\nvar htmlClassList = {};\nvar docBodyClassList = {};\n\nfunction dumpClassLists() {\n  if (process.env.NODE_ENV !== \"production\") {\n    var classes = document.getElementsByTagName(\"html\")[0].className;\n    var buffer = \"Show tracked classes:\\n\\n\";\n\n    buffer += \"<html /> (\" + classes + \"):\\n\";\n    for (var x in htmlClassList) {\n      buffer += \"  \" + x + \" \" + htmlClassList[x] + \"\\n\";\n    }\n\n    classes = document.body.className;\n\n    // eslint-disable-next-line max-len\n    buffer += \"\\n\\ndoc.body (\" + classes + \"):\\n\";\n    for (var _x in docBodyClassList) {\n      buffer += \"  \" + _x + \" \" + docBodyClassList[_x] + \"\\n\";\n    }\n\n    buffer += \"\\n\";\n\n    // eslint-disable-next-line no-console\n    console.log(buffer);\n  }\n}\n\n/**\n * Track the number of reference of a class.\n * @param {object} poll The poll to receive the reference.\n * @param {string} className The class name.\n * @return {string}\n */\nvar incrementReference = function incrementReference(poll, className) {\n  if (!poll[className]) {\n    poll[className] = 0;\n  }\n  poll[className] += 1;\n  return className;\n};\n\n/**\n * Drop the reference of a class.\n * @param {object} poll The poll to receive the reference.\n * @param {string} className The class name.\n * @return {string}\n */\nvar decrementReference = function decrementReference(poll, className) {\n  if (poll[className]) {\n    poll[className] -= 1;\n  }\n  return className;\n};\n\n/**\n * Track a class and add to the given class list.\n * @param {Object} classListRef A class list of an element.\n * @param {Object} poll         The poll to be used.\n * @param {Array}  classes      The list of classes to be tracked.\n */\nvar trackClass = function trackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    incrementReference(poll, className);\n    classListRef.add(className);\n  });\n};\n\n/**\n * Untrack a class and remove from the given class list if the reference\n * reaches 0.\n * @param {Object} classListRef A class list of an element.\n * @param {Object} poll         The poll to be used.\n * @param {Array}  classes      The list of classes to be untracked.\n */\nvar untrackClass = function untrackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    decrementReference(poll, className);\n    poll[className] === 0 && classListRef.remove(className);\n  });\n};\n\n/**\n * Public inferface to add classes to the document.body.\n * @param {string} bodyClass The class string to be added.\n *                           It may contain more then one class\n *                           with ' ' as separator.\n */\nvar add = exports.add = function add(element, classString) {\n  return trackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};\n\n/**\n * Public inferface to remove classes from the document.body.\n * @param {string} bodyClass The class string to be added.\n *                           It may contain more then one class\n *                           with ' ' as separator.\n */\nvar remove = exports.remove = function remove(element, classString) {\n  return untrackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};"]},"metadata":{},"sourceType":"script"}